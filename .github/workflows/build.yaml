name: build
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: false
        default: default
        description: Space or comma separated list of features to activate
jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-18.04
            rust: stable
            target: x86_64-unknown-linux-musl
            archive-name: pkomga-linux.tar.gz
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            archive-name: pkomga-macos.tar.gz
          - build: windows
            os: windows-2019
            rust: stable-x86_64-msvc
            target: x86_64-pc-windows-msvc
            archive-name: pkomga-windows.tar.gz
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --verbose --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Strip binary (linux and macos)
        if: matrix.build == 'linux' || matrix.build == 'macos'
        run: strip "target/${{ matrix.target }}/release/pkomga"

      - name: Build archive
        shell: bash
        env:
          ARCHIVE_FILE: pkomga-${{ matrix.target }}.tar.gz
        run: |
          mkdir archive
          cd archive
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "../target/${{ matrix.target }}/release/pkomga.exe" ./
            tar -czf "${{ matrix.archive-name }}" pkomga.exe
          else
            cp "../target/${{ matrix.target }}/release/pkomga" ./
            tar -czf "${{ matrix.archive-name }}" pkomga
          fi

      - name: Publish release
        uses: softprops/action-gh-release@v2.0.6
        with:
          draft: false
          tag_name: ${{ inputs.version }}
          files: |
            ${{ env.archive_file }} 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
